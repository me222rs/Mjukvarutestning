package tests;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.io.ByteArrayInputStream;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;

import org.junit.Test;

import Yatzy.Controller;
import Yatzy.Dice;
import Yatzy.Model;
import Yatzy.Points;
import Yatzy.View;
import Yatzy.game;

public class MVCtest {
	Model model;
	View view;
		
		//Test by Emil & Mikael
	   @Test(expected=InputMismatchException.class)
	   public void test_MenuChoiceExceptionTest_NotInteger(){
		   ByteArrayInputStream in = new ByteArrayInputStream("t".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   //Test by Emil & Mikael
	   @Test(expected=IndexOutOfBoundsException.class)
	   public void test_MenuChoiceExceptionTest_NotInRange_TooLow(){
		   ByteArrayInputStream in = new ByteArrayInputStream("0".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   //Test by Emil & Mikael
	   @Test(expected=IndexOutOfBoundsException.class)
	   public void test_MenuChoiceExceptionTest_NotInRange_TooHigh(){
		   ByteArrayInputStream in = new ByteArrayInputStream("4".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   @Test
	   public void test_mock(){
		   List<Dice>diceList = new ArrayList<Dice>();
		   List<Dice>resultList = new ArrayList<Dice>();
		   
		   Dice d1 = mock(Dice.class);
		   Dice d2 = mock(Dice.class);
		   Dice d3 = mock(Dice.class);
		   Dice d4 = mock(Dice.class);
		   Dice d5 = mock(Dice.class);
	       Controller c = new Controller(model, view);
	        d1.SetValue(1);
	        d2.SetValue(2);
	        d3.SetValue(3);
	        d4.SetValue(4);
	        d5.SetValue(5);
	        
		       diceList.add(d1);
		       diceList.add(d2);
		       diceList.add(d3);
		       diceList.add(d4);
		       diceList.add(d5);
		       
	        c.ThrowAllDice(diceList);
	        
	        String expected = "1 2 3 4 5";
	        
	        //when(c.ThrowAllDice(diceList)).thenReturn("par");
	        resultList = c.ThrowAllDice(diceList);
	        
	       //1
	        //assertEquals(diceList.get(1), resultList.get(1));
	        

	        verify(d1, times(1));
	   }
}
