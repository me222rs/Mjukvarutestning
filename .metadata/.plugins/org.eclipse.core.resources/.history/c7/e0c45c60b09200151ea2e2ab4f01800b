package tests;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.io.ByteArrayInputStream;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;

import org.junit.Test;

import Yatzy.Controller;
import Yatzy.Dice;
import Yatzy.Model;
import Yatzy.Points;
import Yatzy.View;
import Yatzy.game;

public class MVCtest {
	Model model;
	View view;
		
		//Test by Emil & Mikael
	   @Test(expected=InputMismatchException.class)
	   public void test_MenuChoiceExceptionTest_NotInteger(){
		   ByteArrayInputStream in = new ByteArrayInputStream("t".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   //Test by Emil & Mikael
	   @Test(expected=IndexOutOfBoundsException.class)
	   public void test_MenuChoiceExceptionTest_NotInRange_TooLow(){
		   ByteArrayInputStream in = new ByteArrayInputStream("0".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   //Test by Emil & Mikael
	   @Test(expected=IndexOutOfBoundsException.class)
	   public void test_MenuChoiceExceptionTest_NotInRange_TooHigh(){
		   ByteArrayInputStream in = new ByteArrayInputStream("4".getBytes());
		   this.view = new View();
		   this.view.MenuChoice(in);
	   }
	   
	   @Test
	   public void test_mock(){
		   List<Dice >diceList = new ArrayList<Dice>();
		   Dice d = mock(Dice.class);
	        Controller c = mock(Controller.class);
		       g.diceList.add(d);
		       g.diceList.add(d);
		       g.diceList.add(d);
		       g.diceList.add(d);
		       g.diceList.add(d);
	        c.ThrowAllDice(diceList);
	        String expected = "inif";
	        
	        when(g.ShowRethrowMenu("0", p)).thenReturn("par");
	        String result = g.ShowRethrowMenu("0", p);
	        
	        assertEquals(expected, result);
	        

	        verify(g, times(1)).ShowRethrowMenu("0",p);
	   }
}
