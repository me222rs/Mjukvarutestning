package Yatzy;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class View {
	//Code by Emil & Mikael
	public void GetStartMenu(){
		System.out.println("----Menu----");
		System.out.println("1 - Play");
		System.out.println("2 - How to play");
		System.out.println("3 - Exit");
	}
	//Code by Mikael
	public void HowToPlayInstructions(){
		 String instructions = "This is a yatzee game with our own rules. Start the game by pressing Play. You will be presented with 5 values which are the dices that were thrown. You can now rethrow the dices by typing the position of the dice, for multiple dices to rethrow you can separate the positions with a space. The score will then be presented after you rethrow. You can only rethrow once.";
		 System.out.print("\n"+instructions);
	}
	//Code by Emil & Mikael
	public ByteArrayInputStream InputStartMenu(){
		int input;
		Scanner scanner = new Scanner(System.in);
		try{
     	input = scanner.nextInt();
		}
		catch(InputMismatchException e){
			throw new InputMismatchException("Error! Only integers allowed.");
		}
     	
     	StringBuilder sb = new StringBuilder();
     	sb.append("");
     	sb.append(input);
     	String inputString = sb.toString();
     	
     	ByteArrayInputStream in = new ByteArrayInputStream(inputString.getBytes());
     	return in;
	}
	
	//Code by Emil & Mikael
	public int MenuChoice(ByteArrayInputStream in)
	{
		int choice = 0;
		String choiceAsString = "";
		
		//BufferedReader is used so that we can test the menu input
		try(BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF8")) ) {
			choiceAsString = reader.readLine();
			if(choiceAsString == "" || choiceAsString == null){
				throw new IllegalArgumentException();
			}
			if(!choiceAsString.matches("-?\\d+(\\.\\d+)?")){
				throw new InputMismatchException("Error! Only integers allowed.");
			}
			
		    choice = Integer.parseInt(choiceAsString);
		    if(choice < 1 || choice > 3)
		    {
		    	throw new IndexOutOfBoundsException("Error! Input must be in range 1 - 3");
		    }
		     
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return choice;
		
	}
	
	public String GetRethrow()
	{
//		public ByteArrayInputStream InputStartMenu(){
		String input = null;
		Scanner scanner = new Scanner(System.in);
		//while(scanner.hasNext())
		//{
			input = scanner.nextLine();
		//}
     	
		System.out.println(input);
     	return input;
	
	}

	public void PrintResult(List<Dice> diceList) {
		if(diceList.size() != 5)
		{
			throw new IndexOutOfBoundsException();
		}
		String out = "";
		for(int i=0;i<diceList.size();i++){	
			out += diceList.get(i).GetValue() + " ";	
		}
		System.out.print(out.substring(0,out.length()-1));
	}
	
	public void ShowRethrowMenu(){
		System.out.print("\nWhich dice would you like to rethrow? Separate dice positions with a space.\n");
	}
	
	public void AfterRethrow(){
		System.out.print("\nThis is your dices after they were rethrown.\n");	
	}

	public void PrintPointsResult(String str) {
		System.out.print("\n" + str);
	}
		
}

